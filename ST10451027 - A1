import java.util.ArrayList;
import java.util.Scanner;
class Student {
    private String studentID;
    private String name;
    private int age;
    public Student(String studentID, String name, int age) {
        this.studentID = studentID;
        this.name = name;
        this.age = age;
    }
    // Getters and Setters
    public String getStudentID() {
        return studentID;
    }
    public String getName() {
        return name;
    }
    public int getAge() {
        return age;
    }
    @Override
    public String toString() {
        return "Student ID: " + studentID + "\nName: " + name + "\nAge: " + age;
    }
}
public class Main {
    static ArrayList<Student> students = new ArrayList<>();
    static Scanner scanner = new Scanner(System.in);
    public static void main(String[] args) {
        boolean running = true;
        while (running) {
            System.out.println("Enter (1) To lunch menu or any other key to exit.");
            if (scanner.nextLine().equals("1")) {
                displayMenu();
            } else {
                running = false;
                System.out.println("Exiting Application...");
            }
        }
    }
    static void displayMenu() {
        System.out.println("\nStudent Management System");
        System.out.println("1) Capture new students");
        System.out.println("2) Search for a student");
        System.out.println("3) Delete a student");
        System.out.println("4) Print student report");
        System.out.println("5) Exit application");
        System.out.print("Enter your choice: ");
        int choice = scanner.nextInt();
        scanner.nextLine(); // Consume newline character
        switch (choice) {
            case 1:
                captureNewStudent();
                break;
            case 2:
                searchStudent();
                break;
            case 3:
                deleteStudent();
                break;
            case 4:
                printStudentReport();
                break;
            case 5:
                System.out.println("Exiting Application...");
                System.exit(0);
            default:
                System.out.println("Invalid choice. Please try again.");
        }
    }
    static void captureNewStudent() {
        System.out.println("\nCapture New Student");
        System.out.print("Enter Student ID: ");
        String studentID = scanner.nextLine();
        System.out.print("Enter Student Name: ");
        String name = scanner.nextLine();
        int age = 0;
        do {
            System.out.print("Enter Student Age (16 or older): ");
            while (!scanner.hasNextInt()) {
                System.out.println("Invalid age. Please enter a number.");
                scanner.next(); // Consume non-integer input
            }
            age = scanner.nextInt();
            scanner.nextLine(); // Consume newline character
            if (age < 16) {
                System.out.println("Invalid age. Age must be 16 or older.");
            }
        } while (age < 16);
        Student newStudent = new Student(studentID, name, age);
        students.add(newStudent);
        System.out.println("Student details saved successfully.");
    }
    static void searchStudent() {
        System.out.println("\nSearch for Student");
        System.out.print("Enter Student ID: ");
        String studentID = scanner.nextLine();
        boolean found = false;
        for (Student student : students) {
            if (student.getStudentID().equals(studentID)) {
                System.out.println("\nStudent Found:");
                System.out.println(student);
                found = true;
                break;
            }
        }
        if (!found) {
            System.out.println("Student with ID " + studentID + " not found.");
        }
    }
    static void deleteStudent() {
        System.out.println("\nDelete Student");
        System.out.print("Enter Student ID to delete: ");
        String studentID = scanner.nextLine();
        boolean found = false;
        for (int i = 0; i < students.size(); i++) {
            if (students.get(i).getStudentID().equals(studentID)) {
                System.out.println("\nAre you sure you want to delete this student? (y/n)");
                String confirm = scanner.nextLine();
                if (confirm.equalsIgnoreCase("y")) {
                    students.remove(i);
                    System.out.println("Student deleted successfully.");
                    found = true;
                    break;
                } else {
                    System.out.println("Deletion cancelled.");
                }
            }
        }
        if (!found) {
            System.out.println("Student with ID " + studentID + " not found.");
        }
    }
    static void printStudentReport() {
        System.out.println("\nStudent Report");
        if (students.isEmpty()) {
            System.out.println("No students in the database.");
        } else {
            for (Student student : students) {
                System.out.println(student);
                System.out.println("---------------------");
            }
        }
    }
}
